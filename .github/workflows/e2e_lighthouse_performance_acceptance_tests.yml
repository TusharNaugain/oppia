name: End-to-End, Lighthouse CI performance and Acceptance tests
on:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - develop
      - release-*
  pull_request:
    branches:
      - develop
      - release-*

jobs:
  check_test_suites_to_run:
    uses: ./.github/workflows/check_test_suites_to_run.yml

  build:
    needs: check_test_suites_to_run
    if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).e2e.count > 0 || fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).lighthouse_performance.count > 0 || fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).acceptance.count > 0 }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Python 3.8 with pip cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            requirements.in
            requirements.txt
            requirements_dev.in
            requirements_dev.txt

      - name: Merge develop branch into the current branch
        run: git merge origin/develop

      - name: Cache node modules and third_party/static
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/work/oppia/yarn_cache
            /home/runner/work/oppia/oppia/third_party/static
          key: ${{ runner.os }}-build-${{ hashFiles('yarn.lock', 'dependencies.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}-
      
      - name: Install Oppia dependencies
        run: python -m scripts.install_dependencies --skip_install_third_party

      - name: Install chrome
        run: python -m scripts.install_chrome_for_ci

      - name: Install ffmpeg
        run: sudo apt-get install -y ffmpeg

      - name: Build Webpack
        run: python -m scripts.build --prod_env

      - name: Zip build files
        run: |
          zip -rqy build_files.zip oppia/third_party oppia_tools oppia/build oppia/webpack_bundles oppia/proto_files oppia/app.yaml oppia/assets/hashes.json oppia/proto_files oppia/extensions/classifiers/proto/* oppia/backend_prod_files oppia/dist
        working-directory: /home/runner/work/oppia

      - name: Upload build files artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_files
          path: /home/runner/work/oppia/build_files.zip
          retention-days: 1

  e2e_test:
    needs: [check_test_suites_to_run, build]
    if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).e2e.count > 0 }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        suite: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).e2e.suites }}
    name: e2e_test (${{ matrix.suite.name }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Python 3.8 with pip cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            requirements.in
            requirements.txt
            requirements_dev.in
            requirements_dev.txt
      
      - name: Merge develop branch into the current branch
        run: git merge origin/develop
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: /home/runner/work/oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}-
      
      - name: Download build files artifact
        uses: actions/download-artifact@v3
        with:
          name: build_files
          path: /home/runner/work/oppia

      - name: Unzip build files
        run: unzip build_files.zip -d /home/runner/work/oppia && rm build_files.zip
      
      - name: Install Oppia dependencies
        run: python -m scripts.install_dependencies --skip_install_third_party

      - name: Install chrome
        run: python -m scripts.install_chrome_for_ci

      - name: Install ffmpeg
        run: sudo apt-get install -y ffmpeg

      - name: Run E2E Test ${{ matrix.suite.name }}
        run: |
          VIDEO_RECORDING_IS_ENABLED=0;
          xvfb-run -a --server-args="-screen 0, 1285x1000x24" python -m scripts.run_e2e_tests --skip-install --skip-build --suite=${{ matrix.suite.name }} --prod_env
      
      - name: Uploading webdriverio-video as Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: webdriverio-video
          path: /home/runner/work/oppia/webdriverio-video

  lighthouse_performance:
    needs: [check_test_suites_to_run, build]
    if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).lighthouse_performance.count > 0 }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        suite: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).lighthouse_performance.suites }}
    name: lighthouse (${{ matrix.suite.name }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'

      - name: Merge develop branch into the current branch
        run: git merge origin/develop

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: /home/runner/work/oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}-

      - name: Download build files artifact
        uses: actions/download-artifact@v3
        with:
          name: build_files
          path: /home/runner/work/oppia

      - name: Unzip build files
        run: unzip build_files.zip -d /home/runner/work/oppia && rm build_files.zip

      - name: Install chrome
        run: python -m scripts.install_chrome_for_ci

      - name: Run Lighthouse performance checks shard ${{ matrix.suite.name }}
        run: python -m scripts.run_lighthouse_tests --mode performance --skip_build --record_screen --pages ${{ join(matrix.suite.pages_to_run, ',') }}

  acceptance_test:
    needs: [check_test_suites_to_run, build]
    if: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).acceptance.count > 0 }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        suite: ${{ fromJson(needs.check_test_suites_to_run.outputs.test_suites_to_run).acceptance.suites }}
    name: acceptance_test (${{ matrix.suite.name }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Python 3.8 with pip cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            requirements.in
            requirements.txt
            requirements_dev.in
            requirements_dev.txt

      - name: Merge develop branch into the current branch
        run: git merge origin/develop
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: /home/runner/work/oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}-

      - name: Download build files artifact
        uses: actions/download-artifact@v3
        with:
          name: build_files
          path: /home/runner/work/oppia

      - name: Unzip build files
        run: unzip build_files.zip -d /home/runner/work/oppia && rm build_files.zip

      - name: Install Oppia dependencies
        run: python -m scripts.install_dependencies --skip_install_third_party
